import{_ as s,c as e,o as n,e as a}from"./app.4ea82cce.js";const C=JSON.parse('{"title":"fmt使用","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"占位符含义","slug":"占位符含义","link":"#占位符含义","children":[]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"fmt.Fprintf","slug":"fmt-fprintf","link":"#fmt-fprintf","children":[]},{"level":3,"title":"fmt.Println","slug":"fmt-println","link":"#fmt-println","children":[]},{"level":3,"title":"fmt.Printf","slug":"fmt-printf","link":"#fmt-printf","children":[]},{"level":3,"title":"fmt.Sprintf","slug":"fmt-sprintf","link":"#fmt-sprintf","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"relativePath":"knowledge-deposition/GoLang/基础知识/fmt输出含义.md"}'),t={name:"knowledge-deposition/GoLang/基础知识/fmt输出含义.md"},o=a(`<h1 id="fmt使用" tabindex="-1">fmt使用 <a class="header-anchor" href="#fmt使用" aria-hidden="true">#</a></h1><h2 id="占位符含义" tabindex="-1"><code>占位符</code>含义 <a class="header-anchor" href="#占位符含义" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">格式</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;">%b</td><td>一个<code>二进制整数值(基数为2)</code>，或者是一个(高级的)用科学计数法表示的指数为2的浮点数</td></tr><tr><td style="text-align:center;">%c</td><td>字符型，可以把输入的数字按照<code>ASCII码</code>相应转换为对应的字符</td></tr><tr><td style="text-align:center;">%d</td><td>一个<code>十进制数值(基数为10)</code></td></tr><tr><td style="text-align:center;">%f</td><td>以<code>标准记数法</code>表示的<code>浮点数</code>或者<code>复数值</code></td></tr><tr><td style="text-align:center;">%o</td><td>一个以<code>八进制</code>表示的<code>数字(基数为8)</code></td></tr><tr><td style="text-align:center;">%p</td><td>以<code>十六进制(基数为16)</code>表示的一个<code>值的地址</code>，前缀为<code>0x</code>,字母使用小写的<code>a-f</code>表示</td></tr><tr><td style="text-align:center;">%q</td><td>使用Go语法以及必须时使用转义，以<code>双引号</code>括起来的<code>字符串</code>或者<code>字节切片[]byte</code>，或者是<code>以单引号括起来的数字</code></td></tr><tr><td style="text-align:center;">%s</td><td>字符串，输出字符串中的字符直至字符串中的空字符(字符串以<code>’\\0‘</code>结尾，这个<code>’\\0’</code>即空字符)</td></tr><tr><td style="text-align:center;">%t</td><td>以<code>true</code>或者<code>false</code>输出的布尔值</td></tr><tr><td style="text-align:center;">%T</td><td>使用Go语法输出的<code>值的类型</code></td></tr><tr><td style="text-align:center;">%v</td><td>输出变量的<code>值</code></td></tr><tr><td style="text-align:center;">%x</td><td>以<code>十六进制</code>表示的<code>整型值(基数为十六)</code>，数字<code>a-f</code>使用小写表示</td></tr><tr><td style="text-align:center;">%X</td><td>以<code>十六进制</code>表示的<code>整型值(基数为十六)</code>，数字<code>A-F</code>使用大写表示</td></tr></tbody></table><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h2><h3 id="fmt-fprintf" tabindex="-1"><code>fmt.Fprintf</code> <a class="header-anchor" href="#fmt-fprintf" aria-hidden="true">#</a></h3><ul><li><code>Fprintf</code>函数将格式化的字符串写入<code>io.Writer</code>接口实现（如<code>标准输出</code>、<code>文件</code>等）</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Fprintf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w io</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Writer</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>使用示例</p></blockquote><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Fprintf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">os</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Stdout</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, %s!</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Go</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="fmt-println" tabindex="-1"><code>fmt.Println</code> <a class="header-anchor" href="#fmt-println" aria-hidden="true">#</a></h3><ul><li><code>Println</code>函数将给定的参数<code>格式化为字符串</code>并输出到<code>标准输出</code>，并在输出后添加一个<code>换行符</code></li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>使用示例</p></blockquote><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, Go!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="fmt-printf" tabindex="-1"><code>fmt.Printf</code> <a class="header-anchor" href="#fmt-printf" aria-hidden="true">#</a></h3><ul><li><code>Printf</code>函数将格式化的字符串输出到标准输出，可以使用<code>占位符</code>来表示要输出的值</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>使用示例</p></blockquote><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Go</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, %s!</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="fmt-sprintf" tabindex="-1"><code>fmt.Sprintf</code> <a class="header-anchor" href="#fmt-sprintf" aria-hidden="true">#</a></h3><ul><li><code>Sprintf</code>函数将格式化的字符串<code>返回</code>，而不会直接输出到标准输出或其他地方。它<code>返回一个字符串</code>，而<code>不是将格式化的内容打印出来</code></li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Sprintf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">format </span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">...interface{})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span></span>
<span class="line"></span></code></pre></div><blockquote><p>使用示例</p></blockquote><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">name </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Go</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">message </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Sprintf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, %s!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> name</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">message</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h3><ul><li><p><code>fmt.Fprintf</code>用于将格式化的内容写入指定的<code>io.Writer</code>接口实现（比如文件、网络连接等）</p></li><li><p><code>fmt.Println</code>用于将格式化的内容输出到标准输出，并在最后添加一个<code>换行符</code></p></li><li><p><code>fmt.Printf</code>用于将格式化的内容输出到标准输出，可以使用<code>占位符</code>来表示要输出的值</p></li><li><p><code>fmt.Sprintf</code>用于将格式化的内容<code>返回为一个字符串</code>，而不是直接输出到标准输出或其他地方</p></li></ul>`,26),l=[o];function p(c,r,d,i,D,y){return n(),e("div",null,l)}const A=s(t,[["render",p]]);export{C as __pageData,A as default};
