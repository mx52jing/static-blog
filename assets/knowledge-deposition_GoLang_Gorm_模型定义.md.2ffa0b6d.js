import{_ as s,c as a,o as n,e as l}from"./app.dbbf24a1.js";const d=JSON.parse('{"title":"模型定义","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"模型定义","slug":"模型定义-1","link":"#模型定义-1","children":[]},{"level":2,"title":"约定","slug":"约定","link":"#约定","children":[{"level":3,"title":"命名策略","slug":"命名策略","link":"#命名策略","children":[]},{"level":3,"title":"自定义表/字段名","slug":"自定义表-字段名","link":"#自定义表-字段名","children":[]}]},{"level":2,"title":"gorm.Model","slug":"gorm-model","link":"#gorm-model","children":[]},{"level":2,"title":"高级选项","slug":"高级选项","link":"#高级选项","children":[{"level":3,"title":"嵌套结构体","slug":"嵌套结构体","link":"#嵌套结构体","children":[]},{"level":3,"title":"设置时间格式","slug":"设置时间格式","link":"#设置时间格式","children":[]},{"level":3,"title":"字段标签","slug":"字段标签","link":"#字段标签","children":[]},{"level":3,"title":"自动生成表结构","slug":"自动生成表结构","link":"#自动生成表结构","children":[]}]}],"relativePath":"knowledge-deposition/GoLang/Gorm/模型定义.md"}'),e={name:"knowledge-deposition/GoLang/Gorm/模型定义.md"},o=l(`<h1 id="模型定义" tabindex="-1">模型定义 <a class="header-anchor" href="#模型定义" aria-hidden="true">#</a></h1><h2 id="模型定义-1" tabindex="-1">模型定义 <a class="header-anchor" href="#模型定义-1" aria-hidden="true">#</a></h2><p>模型是标准的<code>struct</code>，由<code>Go</code>的基本数据类型、实现了<a href="https://pkg.go.dev/database/sql#Scanner" target="_blank" rel="noreferrer">Scanner</a>和<a href="https://pkg.go.dev/database/sql/driver#Valuer" target="_blank" rel="noreferrer">Valuer</a>接口的自定义类型及其指针或别名组成</p><p>例如:</p><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID           </span><span style="color:#C792EA;">uint</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name         </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Email        </span><span style="color:#89DDFF;">*</span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Age          </span><span style="color:#C792EA;">uint8</span></span>
<span class="line"><span style="color:#A6ACCD;">  Birthday     </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  MemberNumber sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NullString</span></span>
<span class="line"><span style="color:#A6ACCD;">  ActivatedAt  sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NullTime</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt    time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt    time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>结构体<code>小写属性</code>是<code>不会生成字段</code>的</p></div><h2 id="约定" tabindex="-1">约定 <a class="header-anchor" href="#约定" aria-hidden="true">#</a></h2><ul><li><code>gorm</code>默认使用<code>ID</code>作为主键</li></ul><h3 id="命名策略" tabindex="-1">命名策略 <a class="header-anchor" href="#命名策略" aria-hidden="true">#</a></h3><p><code>gorm</code>采用的<code>命名策略</code>:</p><ul><li><p><code>表名</code>是<code>蛇形复数</code></p></li><li><p><code>字段名</code>是<code>蛇形单数</code></p></li></ul><p>例如结构体如下:</p><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ID       </span><span style="color:#C792EA;">uint</span></span>
<span class="line"><span style="color:#A6ACCD;">	UserName </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	Age      </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	Email    </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>通过<code>gorm</code>生成的表结构如下</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">users</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    id        </span><span style="color:#C792EA;">bigint</span><span style="color:#A6ACCD;"> UNSIGNED AUTO_INCREMENT</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    user_name longtext </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    age       </span><span style="color:#C792EA;">bigint</span><span style="color:#A6ACCD;">   </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    email     longtext </span><span style="color:#F78C6C;">NULL</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span></code></pre></div><p>如上所示:</p><ul><li>结构体名称<code>User</code>生成的表名为<code>users</code></li><li>字段名称都小写，有<code>驼峰(UserName)</code>的字段名称被转换为<code>蛇形(user_name)</code></li></ul><h3 id="自定义表-字段名" tabindex="-1">自定义表/字段名 <a class="header-anchor" href="#自定义表-字段名" aria-hidden="true">#</a></h3><p>如果想<code>自定义表名</code>，可以通过以下方法</p><ul><li>实现<code>TableName</code>方法，这种方法只会修改当前设置的表</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	ID       </span><span style="color:#C792EA;">uint</span></span>
<span class="line"><span style="color:#A6ACCD;">	UserName </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	Age      </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">	Email    </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// TableName 会将 User 的表名重写为 \`customUser\`</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">User</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TableName</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">customUser</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>修改连接数据库时的配置，全局修改，所有表命名规则都会修改</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">db</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> err </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> gorm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Open</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">mysql</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Open</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">dbUrl</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Config</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  NamingStrategy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> schema</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NamingStrategy</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// TablePrefix: &quot;lyb_&quot;, // 生成的表名前缀，User结构体生成的表名为lyb_users</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// SingularTable: true, // 使用单数表名，设置为true后，User结构体生成的表名为user，而不是users</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// NoLowerCase: true, // 跳过转换蛇形命名</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">// NameReplacer: strings.NewReplacer(&quot;User&quot;, &quot;Cid&quot;), // 名称替换，执行gorm名称替换策略之前，将User替换为Cid  </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">})</span></span>
<span class="line"></span></code></pre></div><h2 id="gorm-model" tabindex="-1">gorm.Model <a class="header-anchor" href="#gorm-model" aria-hidden="true">#</a></h2><ul><li><code>GORM</code>定义了一个<code>gorm.Model</code>结构体，其包括字段<code>ID</code>、<code>CreatedAt</code>、<code>UpdatedAt</code>、<code>DeletedAt</code></li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// gorm.Model 的定义</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID        </span><span style="color:#C792EA;">uint</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;primaryKey&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  DeletedAt gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DeletedAt </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;index&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="高级选项" tabindex="-1">高级选项 <a class="header-anchor" href="#高级选项" aria-hidden="true">#</a></h2><h3 id="嵌套结构体" tabindex="-1">嵌套结构体 <a class="header-anchor" href="#嵌套结构体" aria-hidden="true">#</a></h3><ul><li>对于<code>匿名字段</code>，<code>GORM</code>会将其字段包含在<code>父结构体</code>中，例如：</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Model</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等效于</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID        </span><span style="color:#C792EA;">uint</span><span style="color:#A6ACCD;">           </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;primaryKey&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  DeletedAt gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DeletedAt </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;index&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>对于<code>普通的结构体</code>，可以使用<code>embedded</code>标签</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Author</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Name  </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">    Email </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Blog</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID      </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">  Author  Author </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;embedded&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  Upvotes </span><span style="color:#C792EA;">int32</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等效于</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Blog</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID    </span><span style="color:#C792EA;">int64</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name  </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Email </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Upvotes  </span><span style="color:#C792EA;">int32</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>可以使用标签<code>embeddedPrefix</code>添加嵌套结构体字段的名称</li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Author</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    Name  </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">    Email </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Blog</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID      </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">  Author  Author </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;embedded;embeddedPrefix:author_&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">  Upvotes </span><span style="color:#C792EA;">int32</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等同于如下所示</span></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Blog</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID          </span><span style="color:#C792EA;">int64</span></span>
<span class="line"><span style="color:#A6ACCD;">  AuthorName  </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  AuthorEmail </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Upvotes     </span><span style="color:#C792EA;">int32</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="设置时间格式" tabindex="-1">设置<code>时间格式</code> <a class="header-anchor" href="#设置时间格式" aria-hidden="true">#</a></h3><ul><li><code>GORM</code>约定使用<code>CreatedAt</code>、<code>UpdatedAt</code> 追踪<code>创建/更新</code>时间，格式为<code>time.Time(1998-06-16 12:20:57.919)</code>，如果想用<code>时间戳</code>表示，可以将类型修改为<code>int</code>类型，或者使用<code>autoCreateTime</code>、<code>autoUpdateTime</code>等标签</li></ul><blockquote><p>例如</p></blockquote><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time </span><span style="color:#676E95;font-style:italic;">// 在创建时，如果该字段值为零值，则使用当前时间填充</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// 在创建时该字段值为零值或者在更新时，使用当前时间戳秒数填充</span></span>
<span class="line"><span style="color:#A6ACCD;">  Updated   </span><span style="color:#C792EA;">int64</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;autoUpdateTime:nano&quot;</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 使用时间戳纳秒数填充更新时间</span></span>
<span class="line"><span style="color:#A6ACCD;">  Updated   </span><span style="color:#C792EA;">int64</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;autoUpdateTime:milli&quot;</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 使用时间戳毫秒数填充更新时间</span></span>
<span class="line"><span style="color:#A6ACCD;">  Created   </span><span style="color:#C792EA;">int64</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;autoCreateTime&quot;</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">// 使用时间戳秒数填充创建时间</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="字段标签" tabindex="-1">字段标签 <a class="header-anchor" href="#字段标签" aria-hidden="true">#</a></h3><ul><li><p><code>column</code>：自定义<code>列名</code></p></li><li><p><code>type</code>：<code>列数据类型</code>，例如：<code>bool</code>、<code>int</code>、<code>uint</code>、<code>float</code>、<code>string</code>、<code>time</code>、<code>bytes</code></p></li><li><p><code>size</code>：定义列数据类型的<code>大小</code>或<code>长度</code></p></li><li><p><code>primaryKey</code>：将列定义为<code>主键</code></p></li><li><p><code>unique</code>：将列定义为<code>唯一键</code></p></li><li><p><code>default</code>：定义列的<code>默认值</code></p></li><li><p><code>not null</code>：指定列为<code>NOT NULL</code>，不可为空</p></li><li><p><code>embedded</code>：嵌套字段</p></li><li><p><code>embeddedPrefix</code>：嵌入字段的<code>列名前缀</code></p></li><li><p><code>comment</code>：列的<code>注释</code></p></li><li><p><code>-</code>：忽略这个字段，<code>-</code>：没有<code>读/写</code>权限；<code>-:migration</code>：没有<code>迁移</code>权限；<code>-:all</code>：没有<code>读/写/迁移</code>权限</p></li></ul><h3 id="自动生成表结构" tabindex="-1">自动生成表结构 <a class="header-anchor" href="#自动生成表结构" aria-hidden="true">#</a></h3><ul><li>使用<code>AutoMigrate</code>来实现</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>AutoMigrate</code>的逻辑是<code>只新增</code>，<code>不删除</code>，<code>不修改</code>，但是如果修改了字段大小(<code>size</code>)会同步修改)</p></div><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Teacher</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	gorm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Model</span></span>
<span class="line"><span style="color:#A6ACCD;">	Name   </span><span style="color:#C792EA;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">gorm:&quot;type:varchar(32)&quot;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#A6ACCD;">	Age    </span><span style="color:#C792EA;">uint8</span></span>
<span class="line"><span style="color:#A6ACCD;">	Gender </span><span style="color:#C792EA;">uint8</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">DB</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AutoMigrate</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">Teacher</span><span style="color:#89DDFF;">{})</span></span>
<span class="line"></span></code></pre></div>`,44),p=[o];function t(c,r,i,C,y,D){return n(),a("div",null,p)}const F=s(e,[["render",t]]);export{d as __pageData,F as default};
