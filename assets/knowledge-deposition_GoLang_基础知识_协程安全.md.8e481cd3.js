import{_ as s,c as n,o as a,e as l}from"./app.4ae1b729.js";const i=JSON.parse('{"title":"协程安全","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"互斥锁(Mutex)","slug":"互斥锁-mutex","link":"#互斥锁-mutex","children":[]},{"level":2,"title":"读写锁RWMutex","slug":"读写锁rwmutex","link":"#读写锁rwmutex","children":[]}],"relativePath":"knowledge-deposition/GoLang/基础知识/协程安全.md"}'),p={name:"knowledge-deposition/GoLang/基础知识/协程安全.md"},o=l(`<h1 id="协程安全" tabindex="-1">协程安全 <a class="header-anchor" href="#协程安全" aria-hidden="true">#</a></h1><p>当程序并发执行时，如果同时操作一份数据， 就可能会出现问题，如下：</p><p>我想让钱包中的钱增加，于是开启了<code>1万</code>个协程，每次将钱包的钱增加<code>1万</code>，理想的结果最终是<code>10000*10000 = 100000000</code>，但运行结果却不尽人意</p><p>第一次结果：<code>93380000</code>，第二次结果<code>92660000</code>，第三次结果<code>92560000</code></p><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WalletV1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	balance </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">WalletV1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deposite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> num</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">WalletV1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBalance</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">saveMoneyV1</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	num </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	walletV1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">WalletV1</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> wg sync</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WaitGroup</span></span>
<span class="line"><span style="color:#A6ACCD;">	wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				walletV1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deposite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">				wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Done</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Wait</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">余额:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> walletV1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBalance</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">saveMoneyV1</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>多个<code>Go协程</code>不应该同时访问那些修改共享资源的代码，这些修改共享资源的代码称为<code>临界区</code></p></div><p><code>go</code>中提供了<code>互斥锁(Mutex)</code>和<code>读写锁(RWMutex)</code>来解决这个问题</p><h2 id="互斥锁-mutex" tabindex="-1">互斥锁(Mutex) <a class="header-anchor" href="#互斥锁-mutex" aria-hidden="true">#</a></h2><p>使用<code>Mutex</code>来改进上面的代码</p><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WalletV2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	balance </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	m	    sync</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Mutex</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">WalletV2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deposite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">defer</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">m</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unlock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> num</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">WalletV2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBalance</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">saveMoneyV2</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	num </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	walletV2 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">WalletV2</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> wg sync</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WaitGroup</span></span>
<span class="line"><span style="color:#A6ACCD;">	wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				walletV2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deposite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">				wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Done</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Wait</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">余额:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> walletV2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBalance</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">saveMoneyV2</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p><code>sync.Mutex</code>实现了互斥锁，<code>互斥锁(Mutex，mutual exclusion)</code>提供了一种<code>加锁机制(Locking Mechanism)</code>，能够保证在某一时刻只有一个协程在<code>临界区</code>运行，防止同一时间存在多个修改数据操作，它提供了<code>Lock</code>和<code>UnLock</code>两个方法来实现</p></li><li><p>当一个协程被上锁后，如果其他协程来执行同样的操作时，会被阻塞，直到该协程<code>解锁</code></p></li></ul><blockquote><p>上面例子中，对<code>deposite</code>方法加锁，保证同一时间只能有一个协程对数据进行操作</p></blockquote><h2 id="读写锁rwmutex" tabindex="-1">读写锁RWMutex <a class="header-anchor" href="#读写锁rwmutex" aria-hidden="true">#</a></h2><ul><li><p><code>sync.RWMutex</code>实现<code>读写互斥锁</code>，适用于<code>读多写少</code>的场景</p></li><li><p>允许<code>同一时间可以有多个协程访问获取某一数据</code>，但是<code>同一时间只能有一个协程修改某一数据</code></p></li><li><p>读锁与读锁兼容，读锁与写锁互斥，写锁与写锁互斥</p><ul><li><code>读锁</code>：调用<code>RLock</code>方法加锁，调用<code>RUnlock</code>解锁</li><li><code>写锁</code>：调用<code>Lock</code>方法加锁，调用<code>Unlock</code>解锁</li></ul></li></ul><blockquote><p>示例</p></blockquote><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">WalletV3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	balance </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	m		sync</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Mutex</span></span>
<span class="line"><span style="color:#A6ACCD;">	rw      sync</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RWMutex</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">WalletV3</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deposite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Lock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">defer</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unlock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> num</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">w </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">WalletV3</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getBalance</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RLock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">defer</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RUnlock</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> w</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">balance</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">saveMoneyV3</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	num </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10000</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	walletV3 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">WalletV3</span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> wg sync</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WaitGroup</span></span>
<span class="line"><span style="color:#A6ACCD;">	wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				walletV3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deposite</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">				wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Done</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	wg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Wait</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">余额:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> walletV3</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBalance</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">saveMoneyV3</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,16),e=[o];function t(c,D,r,F,y,A){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
