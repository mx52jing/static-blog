import{_ as s,c as n,o as a,e as l}from"./app.7cccfc36.js";const i=JSON.parse('{"title":"Test","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"单元测试","slug":"单元测试","link":"#单元测试","children":[{"level":3,"title":"简单测试","slug":"简单测试","link":"#简单测试","children":[]},{"level":3,"title":"子测试","slug":"子测试","link":"#子测试","children":[]},{"level":3,"title":"表驱动测试","slug":"表驱动测试","link":"#表驱动测试","children":[]},{"level":3,"title":"测试覆盖率","slug":"测试覆盖率","link":"#测试覆盖率","children":[]}]},{"level":2,"title":"基准测试","slug":"基准测试","link":"#基准测试","children":[{"level":3,"title":"常用的基准测试命令","slug":"常用的基准测试命令","link":"#常用的基准测试命令","children":[]}]}],"relativePath":"knowledge-deposition/GoLang/基础知识/Test.md"}'),p={name:"knowledge-deposition/GoLang/基础知识/Test.md"},o=l(`<h1 id="test" tabindex="-1">Test <a class="header-anchor" href="#test" aria-hidden="true">#</a></h1><p>在<code>Go</code>中，可以使用内置的测试框架来进行<code>单元测试</code>和<code>基准测试</code>，帮助开发者编写、运行和管理测试代码，以确保代码的质量和稳定性</p><h2 id="单元测试" tabindex="-1">单元测试 <a class="header-anchor" href="#单元测试" aria-hidden="true">#</a></h2><h3 id="简单测试" tabindex="-1">简单测试 <a class="header-anchor" href="#简单测试" aria-hidden="true">#</a></h3><p><code>Go</code>中编写一个简单测试的流程：</p><ol><li>创建测试文件：测试文件应该与被测试的代码所在的文件放在<code>同一个包</code>中，测试文件需要以<code>_test.go</code>结尾</li></ol><blockquote><p>例如：要测试名为foo文件中的函数，需要创建一个名为<code>foo_test.go</code>的文件</p></blockquote><ol start="2"><li>编写测试函数：测试函数都要以<code>Test</code>开头，Test后面跟被测试函数的名称，参数是<code>t *testing.T</code></li></ol><blockquote><p>例如：要测试名为<code>foo</code>的函数，可以创建一个名为<code>TestFoo</code>的测试函数，<code>func TestFoo(t *testing.T)</code></p></blockquote><ol start="3"><li>编写测试代码：测试函数中需要编写测试代码，用来验证被测试函数的行为是否符合预期。</li></ol><blockquote><p>测试代码中，应该使用<code>t.Error</code>或<code>t.Fail</code>等函数来报告测试失败结果</p></blockquote><ol start="4"><li>运行测试代码：</li></ol><blockquote><p>在命令行中使用<code>go test</code>命令来运行测试，如果测试通过，将输出<code>PASS</code>，如果测试失败，将输出失败的测试用例的详细信息</p></blockquote><h4 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-hidden="true">#</a></h4><p>代码目录结构</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">.</span><span style="color:#82AAFF;">test</span><span style="color:#FFCB6B;">-related</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">foo.go</span></span>
<span class="line"><span style="color:#FFCB6B;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">foo_test.go</span></span>
<span class="line"></span></code></pre></div><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// foo.go</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test_related</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// foo_test.go</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test_related</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">testing</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TestFoo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	result </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	expect </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> expect </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo(1, 2) expect is %d, result is %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在<code>rest-related</code>目录下运行<code>go test</code>，输出如下</p><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">➜  test</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">related </span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#A6ACCD;"> test</span></span>
<span class="line"><span style="color:#A6ACCD;">PASS</span></span>
<span class="line"><span style="color:#A6ACCD;">ok  	github</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">com</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">mx52jing</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">go</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">basic</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">test</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">related	0.645s</span></span>
<span class="line"></span></code></pre></div><p><code>go test</code>还支持其他一些参数</p><ul><li><p><code>-v</code>：输出测试详情；</p></li><li><p><code>-run</code>：指定要运行的测试函数，可以通过正则来匹配</p></li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 测试当前目录下所有单元测试并输出测试详情</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 测试当前目录下后缀名称为Foo的单元测试并输出测试详情</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-run=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span></code></pre></div><p>在<code>test-relared</code>目录执行<code>go test -run=&quot;Foo$&quot; -v</code>输出如下</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">test-related</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-run=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">PASS</span></span>
<span class="line"><span style="color:#FFCB6B;">ok</span><span style="color:#A6ACCD;">  	</span><span style="color:#C3E88D;">github.com/mx52jing/go-basic/test-related	3.067s</span></span>
<span class="line"></span></code></pre></div><ul><li><p><code>=== RUN</code>：表示运行的测试函数名称</p></li><li><p><code>--- PASS</code>：表示测试函数的结果为通过</p></li></ul><h3 id="子测试" tabindex="-1">子测试 <a class="header-anchor" href="#子测试" aria-hidden="true">#</a></h3><ul><li><p>子测试可以在一个测试函数中创建多个子测试，每个子测试都可以独立运行</p></li><li><p>在子测试中使用<code>t.Run</code>函数来创建子测试</p></li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// foo_test.go</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test_related</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">testing</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TestFoo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">case 1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		result </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		expect </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> expect </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo(1, 2) expect is %d, result is %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">	t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">case 2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		result </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		expect </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> expect </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo(1, 2) expect is %d, result is %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">	t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">case 3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		result </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		expect </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> expect </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo(1, 2) expect is %d, result is %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在<code>test-relared</code>目录执行<code>go test -run=&quot;Foo$&quot; -v</code>输出如下</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">test-related</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-run=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_1</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">foo_test.go:22:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_3</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAIL:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># case1 通过</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAIL:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># case2 不通过 </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># case3 通过</span></span>
<span class="line"><span style="color:#FFCB6B;">FAIL</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">FAIL</span><span style="color:#A6ACCD;">	</span><span style="color:#C3E88D;">github.com/mx52jing/go-basic/test-related	0.093s</span></span>
<span class="line"></span></code></pre></div><h3 id="表驱动测试" tabindex="-1">表驱动测试 <a class="header-anchor" href="#表驱动测试" aria-hidden="true">#</a></h3><ul><li><p>在<code>Go</code>中还可以使用<code>表格驱动测试</code>来测试<code>多组输入和输出</code>，减少重复代码</p></li><li><p>创建一个包含输入和预期输出的表格，然后使用<code>for range</code>循环遍历表格中的每一行并运行测试</p></li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test_related</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">testing</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TestFoo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">args</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		a </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">		b </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">tableStruct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		name   </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">		args   args</span></span>
<span class="line"><span style="color:#A6ACCD;">		expect </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	tableData </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">tableStruct</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">case 1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   args</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">			expect</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">case 2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   args</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">521</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">520</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">			expect</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1041</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">case 3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			args</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">   args</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">			expect</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> _</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">range</span><span style="color:#A6ACCD;"> tableData </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">t </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			result </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">args</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">			expect </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> val</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">expect</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> expect </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				t</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Errorf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">foo(1, 2) expect is %d, result is %d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> expect</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在<code>test-relared</code>目录执行<code>go test -run=&quot;Foo$&quot; -v</code>输出如下</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">test-related</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-run=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_1</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_2</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_3</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">foo_test.go:66:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAIL:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAIL:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">FAIL</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">FAIL</span><span style="color:#A6ACCD;">	</span><span style="color:#C3E88D;">github.com/mx52jing/go-basic/test-related	0.469s</span></span>
<span class="line"></span></code></pre></div><h3 id="测试覆盖率" tabindex="-1">测试覆盖率 <a class="header-anchor" href="#测试覆盖率" aria-hidden="true">#</a></h3><ul><li><p><code>Golang</code>工具链提供了内置的覆盖率分析工具，可以通过<code>go test -cover</code>命令来生成测试覆盖率报告</p></li><li><p>在覆盖率报告中，可以看到每个包、每个文件和每个函数的覆盖率信息</p></li></ul><p>在<code>test-relared</code>目录执行<code>go test -run=&quot;Foo$&quot; -v --cover</code>输出如下</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">test-related</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-run=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--cover</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_1</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_2</span></span>
<span class="line"><span style="color:#FFCB6B;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">RUN</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">TestFoo/case_3</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">foo_test.go:66:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">expect</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">result</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">is</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">300</span></span>
<span class="line"><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAIL:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PASS:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">---</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">FAIL:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TestFoo/case_3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">0.00s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">FAIL</span></span>
<span class="line"><span style="color:#FFCB6B;">coverage:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100.0</span><span style="color:#C3E88D;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">statements</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">测试覆盖率为100%</span></span>
<span class="line"><span style="color:#82AAFF;">exit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">FAIL</span><span style="color:#A6ACCD;">	</span><span style="color:#C3E88D;">github.com/mx52jing/go-basic/test-related	0.103s</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>除了通过命令行执行查看外，还可以使用<code>go test -coverprofile=xxx.out</code>参数来指定输出覆盖率分析结果的文件名，然后执行<code>go tool cover -html=xxx.out</code>命令打开浏览器来查看覆盖率报告</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 生成测试覆盖率报告文件</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-run=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Foo$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-coverprofile=xxx.out</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用默认浏览器打开测试覆盖率报告</span></span>
<span class="line"><span style="color:#FFCB6B;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tool</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cover</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-html=xxx.out</span></span>
<span class="line"></span></code></pre></div><h2 id="基准测试" tabindex="-1">基准测试 <a class="header-anchor" href="#基准测试" aria-hidden="true">#</a></h2><ul><li><p>基准测试实际上就是<code>性能测试</code>，它会把一个函数调用很多次(几千次甚至几万次)，来判断函数的速度、内存开销等</p></li><li><p>基准测试不负责验证代码逻辑是否正确</p></li><li><p>基准测试的文件名称也要以<code>_test.go</code>结尾</p></li><li><p>基准测试是通过<code>testing</code>包提供的<code>benchmark</code>功能实现的</p></li><li><p>基准测试函数名称要以<code>Benchmark</code>开头，在测试文件中，我们可以使用<code>func BenchmarkXXX(b *testing.B)</code>格式的函数来表示基准测试，其中<code>XXX</code>是被测试函数的名称，其中<code>b</code>是一个<code>*testing.B</code>类型的指针，用于控制测试的<code>次数</code>和<code>时间</code>等参数</p></li><li><p>基准测试要运行<code>go test -bench=&quot;xxx&quot;</code></p></li></ul><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// performance.go</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test_related</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">encoding/json</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">github.com/bytedance/sonic</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Student</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Name   </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	Age    </span><span style="color:#C792EA;">uint8</span></span>
<span class="line"><span style="color:#A6ACCD;">	Gender </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Id       </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	Students </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">Student</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	s1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Student</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">闪灵</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">26</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Gender</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">male</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	s2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Student</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">魔灵</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">28</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Gender</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">male</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	s3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Student</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">血灵</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Gender</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">female</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	C1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Class</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		Id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">       </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">class_c1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		Students</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">Student</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">s1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> s3</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handleJsonByJsonLibrary</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	marshal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Marshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">C1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> jsonC2 Class</span></span>
<span class="line"><span style="color:#A6ACCD;">	json</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unmarshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">marshal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">jsonC2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> jsonC2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handleJsonBySonicLibrary</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Class</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">error</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	marshal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> sonic</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Marshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">C1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> sonicC2 Class</span></span>
<span class="line"><span style="color:#A6ACCD;">	sonic</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Unmarshal</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">marshal</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">sonicC2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> sonicC2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// performance_test.go</span></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">test_related</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">testing</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BenchmarkHandleJsonByJsonLibrary</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Benchmark HandleJsonByJsonLibrary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">N</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#82AAFF;">handleJsonByJsonLibrary</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BenchmarkHandleJsonBySonicLibrary</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	b</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Run</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Benchmark HandleJsonBySonicLibrary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">func(</span><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">testing</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">N</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#82AAFF;">handleJsonBySonicLibrary</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">})</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><blockquote><p>命令行中运行<code>go test -bench=&quot;Library$&quot; -benchmem -v .</code></p></blockquote><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">➜</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">test-related</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">go</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-bench=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Library$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-benchmem</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">goos:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">darwin</span></span>
<span class="line"><span style="color:#FFCB6B;">goarch:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">arm64</span></span>
<span class="line"><span style="color:#FFCB6B;">pkg:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">github.com/mx52jing/go-basic/test-related</span></span>
<span class="line"><span style="color:#FFCB6B;">BenchmarkHandleJsonByJsonLibrary</span></span>
<span class="line"><span style="color:#FFCB6B;">BenchmarkHandleJsonByJsonLibrary/Benchmark_HandleJsonByJsonLibrary</span></span>
<span class="line"><span style="color:#FFCB6B;">BenchmarkHandleJsonByJsonLibrary/Benchmark_HandleJsonByJsonLibrary-8</span><span style="color:#A6ACCD;">         	  </span><span style="color:#F78C6C;">485083</span><span style="color:#C3E88D;">	</span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">2453</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ns/op	</span><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">912</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">B/op	</span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">23</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allocs/op</span></span>
<span class="line"><span style="color:#FFCB6B;">BenchmarkHandleJsonBySonicLibrary</span></span>
<span class="line"><span style="color:#FFCB6B;">BenchmarkHandleJsonBySonicLibrary/Benchmark_HandleJsonBySonicLibrary</span></span>
<span class="line"><span style="color:#FFCB6B;">BenchmarkHandleJsonBySonicLibrary/Benchmark_HandleJsonBySonicLibrary-8</span><span style="color:#A6ACCD;">       	  </span><span style="color:#F78C6C;">420487</span><span style="color:#C3E88D;">	</span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">2796</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ns/op	</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">2096</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">B/op	</span><span style="color:#A6ACCD;">      </span><span style="color:#F78C6C;">31</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">allocs/op</span></span>
<span class="line"><span style="color:#FFCB6B;">PASS</span></span>
<span class="line"><span style="color:#FFCB6B;">ok</span><span style="color:#A6ACCD;">  	</span><span style="color:#C3E88D;">github.com/mx52jing/go-basic/test-related	3.670s</span></span>
<span class="line"></span></code></pre></div><ul><li><p><code>goos: darwin</code>：表示当前操作系统</p></li><li><p><code>goarch: arm64</code>：表示本机CPU架构</p></li><li><p><code>BenchmarkHandleJsonByJsonLibrary/Benchmark_HandleJsonByJsonLibrary-8</code> ：BenchmarkHandleJsonByJsonLibrary代表运行的基准测试名称, <code>8</code>代表使用的核心数。</p></li><li><p><code>485083</code>：表示这个基准测试一共运行了485083次，也就是代码中的<code>b.N</code></p></li><li><p><code>2453 ns/op</code>：表示每次运行消耗的时间为<code>2453ns</code></p></li><li><p><code>912 B/op</code>：表示每次运行消耗的内存数为<code>912B</code></p></li><li><p><code>23 allocs/op</code>：表示每次运行进行<code>23</code>次内存申请</p></li></ul><h3 id="常用的基准测试命令" tabindex="-1">常用的基准测试命令 <a class="header-anchor" href="#常用的基准测试命令" aria-hidden="true">#</a></h3><ul><li><p><code>go test -bench .</code>：运行当前目录下的所有基准测试，并输出测试结果</p></li><li><p><code>go test -bench=BenchmarkExample</code>：只运行名为BenchmarkExample的基准测试，并输出测试结果</p></li><li><p><code>go test -bench=BenchmarkExample -benchtime=8s</code>：运行名为BenchmarkExample的基准测试，测试时长为8秒，并输出测试结果</p></li><li><p><code>go test -bench=BenchmarkExample -cpu=8</code>：使用8个CPU核心运行名为BenchmarkExample的基准测试，并输出测试结果</p></li><li><p><code>go test -bench=BenchmarkExample -memprofile=mem.out</code>：运行名为BenchmarkExample的基准测试，并生成内存分配统计文件mem.out</p></li><li><p><code>go test -bench=BenchmarkExample -cpuprofile=cpu.out</code>：运行名为BenchmarkExample的基准测试，并生成CPU分析文件cpu.out</p></li><li><p><code>go test -bench=BenchmarkExample -benchmem</code>：运行名为BenchmarkExample的基准测试，并输出每次测试分配的内存和内存分配次数的平均值</p></li></ul>`,51),e=[o];function t(c,r,D,C,y,F){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
