import{_ as t,c as e,o as d,a as c}from"./app.96fa9ce2.js";const y=JSON.parse('{"title":"fmt输出含义","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"knowledge-deposition/GoLang/基础知识/fmt输出含义.md"}'),o={name:"knowledge-deposition/GoLang/基础知识/fmt输出含义.md"},r=c('<h1 id="fmt输出含义" tabindex="-1">fmt输出含义 <a class="header-anchor" href="#fmt输出含义" aria-hidden="true">#</a></h1><table><thead><tr><th style="text-align:center;">格式</th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;">%%</td><td>一个<code>%</code>字面量</td></tr><tr><td style="text-align:center;">%b</td><td>一个<code>二进制整数值(基数为2)</code>，或者是一个(高级的)用科学计数法表示的指数为2的浮点数</td></tr><tr><td style="text-align:center;">%c</td><td>字符型，可以把输入的数字按照<code>ASCII码</code>相应转换为对应的字符</td></tr><tr><td style="text-align:center;">%d</td><td>一个<code>十进制数值(基数为10)</code></td></tr><tr><td style="text-align:center;">%f</td><td>以<code>标准记数法</code>表示的<code>浮点数</code>或者<code>复数值</code></td></tr><tr><td style="text-align:center;">%o</td><td>一个以<code>八进制</code>表示的<code>数字(基数为8)</code></td></tr><tr><td style="text-align:center;">%p</td><td>以<code>十六进制(基数为16)</code>表示的一个<code>值的地址</code>，前缀为<code>0x</code>,字母使用小写的<code>a-f</code>表示</td></tr><tr><td style="text-align:center;">%q</td><td>使用Go语法以及必须时使用转义，以<code>双引号</code>括起来的<code>字符串</code>或者<code>字节切片[]byte</code>，或者是<code>以单引号括起来的数字</code></td></tr><tr><td style="text-align:center;">%s</td><td>字符串，输出字符串中的字符直至字符串中的空字符(字符串以<code>’\\0‘</code>结尾，这个<code>’\\0’</code>即空字符)</td></tr><tr><td style="text-align:center;">%t</td><td>以<code>true</code>或者<code>false</code>输出的布尔值</td></tr><tr><td style="text-align:center;">%T</td><td>使用Go语法输出的<code>值的类型</code></td></tr><tr><td style="text-align:center;">%v</td><td>输出变量的<code>值</code></td></tr><tr><td style="text-align:center;">%x</td><td>以<code>十六进制</code>表示的<code>整型值(基数为十六)</code>，数字<code>a-f</code>使用小写表示</td></tr><tr><td style="text-align:center;">%X</td><td>以<code>十六进制</code>表示的<code>整型值(基数为十六)</code>，数字<code>A-F</code>使用大写表示</td></tr></tbody></table>',2),n=[r];function a(l,s,i,_,x,g){return d(),e("div",null,n)}const h=t(o,[["render",a]]);export{y as __pageData,h as default};
