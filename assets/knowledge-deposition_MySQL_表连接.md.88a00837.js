import{_ as s,c as a,o as n,e as l}from"./app.7b8aa9ff.js";const D=JSON.parse('{"title":"表连接","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"表连接类型","slug":"表连接类型","link":"#表连接类型","children":[]},{"level":2,"title":"连接条件","slug":"连接条件","link":"#连接条件","children":[]},{"level":2,"title":"内连接INNER JOIN","slug":"内连接inner-join","link":"#内连接inner-join","children":[]},{"level":2,"title":"左外连接LEFT JOIN","slug":"左外连接left-join","link":"#左外连接left-join","children":[]},{"level":2,"title":"右外连接RIGHT JOIN","slug":"右外连接right-join","link":"#右外连接right-join","children":[]},{"level":2,"title":"多表连接","slug":"多表连接","link":"#多表连接","children":[]},{"level":2,"title":"自连接","slug":"自连接","link":"#自连接","children":[]}],"relativePath":"knowledge-deposition/MySQL/表连接.md"}'),e={name:"knowledge-deposition/MySQL/表连接.md"},o=l(`<h1 id="表连接" tabindex="-1">表连接 <a class="header-anchor" href="#表连接" aria-hidden="true">#</a></h1><h2 id="表连接类型" tabindex="-1">表连接类型 <a class="header-anchor" href="#表连接类型" aria-hidden="true">#</a></h2><ul><li><p><code>INNER JOIN</code>：内连接</p></li><li><p><code>LEFT JOIN</code>：左外连接</p></li><li><p><code>RIGHT JOIN</code>：右外连接</p></li></ul><h2 id="连接条件" tabindex="-1">连接条件 <a class="header-anchor" href="#连接条件" aria-hidden="true">#</a></h2><p>使用<code>ON</code>关键字来设定连接条件，也可以使用<code>WHERE</code></p><h2 id="内连接inner-join" tabindex="-1">内连接<code>INNER JOIN</code> <a class="header-anchor" href="#内连接inner-join" aria-hidden="true">#</a></h2><ul><li>筛选<code>同时符合左表和右表的查询条件</code>(指连接结果仅包含符合连接条件的行，参与连接的两个表都应该符合连接条件)</li></ul><div class="language-SQL"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;"># 使用ON关键字</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student A </span><span style="color:#F78C6C;">INNER JOIN</span><span style="color:#A6ACCD;"> score B </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> A.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> B.student_id;</span></span>
<span class="line"><span style="color:#A6ACCD;"># 还可以使用WHERE，和上面的查询是一样的</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student A, score B </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> A.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> B.student_id;</span></span>
<span class="line"></span></code></pre></div><h2 id="左外连接left-join" tabindex="-1">左外连接<code>LEFT JOIN</code> <a class="header-anchor" href="#左外连接left-join" aria-hidden="true">#</a></h2><ul><li>筛选左表的全部和右表符合条件的数据(左边表数据行全部保留，右边表保留符合连接条件的行)</li></ul><div class="language-SQL"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student A </span><span style="color:#F78C6C;">LEFT JOIN</span><span style="color:#A6ACCD;"> score B </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> A.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> B.student_id;</span></span>
<span class="line"></span></code></pre></div><h2 id="右外连接right-join" tabindex="-1">右外连接<code>RIGHT JOIN</code> <a class="header-anchor" href="#右外连接right-join" aria-hidden="true">#</a></h2><ul><li>筛选右表的全部和左表符合条件的数据(右边表数据行全部保留，左边表保留符合连接条件的行)</li></ul><div class="language-SQL"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student A </span><span style="color:#F78C6C;">RIGHT JOIN</span><span style="color:#A6ACCD;"> score B </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> A.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> B.student_id;</span></span>
<span class="line"></span></code></pre></div><h2 id="多表连接" tabindex="-1">多表连接 <a class="header-anchor" href="#多表连接" aria-hidden="true">#</a></h2><blockquote><p>使用多表连接时，要先考虑清楚一共需要查询几张表，是否需要中间过渡表来连接另外的表的数据，理清楚逻辑之后，SQL写起来就顺畅了</p></blockquote><blockquote><p>如下：共有3张表</p><p><code>学生表</code>中存储<code>学生基本信息</code></p><p><code>课程表</code>中存储有<code>哪些课程</code></p><p><code>分数表</code>中存储学生的<code>课程的分数</code>，</p><p>分数表中存了<code>两个外键</code></p><p>其中<code>student_id</code>是学生表的主键<code>id</code>，<code>course_id</code>是分数表的主键<code>id</code></p></blockquote><blockquote><p>需求：查询学生名字为<code>宗主</code>的学生的各科成绩</p></blockquote><blockquote><p>分析：<code>学生名</code>称要从<code>学生表</code>中取得，<code>学生课程</code>要从<code>课程表中</code>取得，<code>学生分数</code>要从<code>分数表</code>中取得，所以要查询<code>3张表</code></p></blockquote><blockquote><p>最终的SQL如下</p></blockquote><div class="language-SQL"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> s2.name, c1.name, s1.grade </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> score s1</span></span>
<span class="line"><span style="color:#F78C6C;">INNER JOIN</span><span style="color:#A6ACCD;"> student s2</span></span>
<span class="line"><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> s1.student_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> s2.id</span></span>
<span class="line"><span style="color:#F78C6C;">INNER JOIN</span><span style="color:#A6ACCD;"> course c1</span></span>
<span class="line"><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> s1.course_id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> c1.id</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> s2.name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">宗主</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"># 查询结果如下</span></span>
<span class="line"><span style="color:#A6ACCD;">s2.name,c1.name,grade</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,语文,</span><span style="color:#F78C6C;">80</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,数学,</span><span style="color:#F78C6C;">98</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,英语,</span><span style="color:#F78C6C;">118</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,物理,</span><span style="color:#F78C6C;">90</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,生物,</span><span style="color:#F78C6C;">86</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,化学,</span><span style="color:#F78C6C;">99</span></span>
<span class="line"><span style="color:#A6ACCD;">宗主,体育,</span><span style="color:#F78C6C;">100</span></span>
<span class="line"></span></code></pre></div><h2 id="自连接" tabindex="-1">自连接 <a class="header-anchor" href="#自连接" aria-hidden="true">#</a></h2><p>自连接就是<code>表</code>与<code>自身</code>进行关联。虽然自连接的两张表都是同一张表，但是我们可以把它按两张表对待，这样理解就会容易些</p><blockquote><p>例如：有一个学生表，要找出学生表中，年龄大于等于<code>胡凯</code>年龄的人</p></blockquote><p>实现该需求可以是用<code>子查询</code>和<code>自连接</code>两种方式：</p><ul><li>使用子查询实现，首先先查询<code>胡凯</code>的年龄，然后再查询年龄大于等于他的</li></ul><div class="language-SQL"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> age </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">胡凯</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">胡凯</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><ul><li>使用自连接实现</li></ul><div class="language-SQL"><button title="Copy Code" class="copy"></button><span class="lang">SQL</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> s2.</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> student s1</span></span>
<span class="line"><span style="color:#F78C6C;">INNER JOIN</span><span style="color:#A6ACCD;"> student s2</span></span>
<span class="line"><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> s1.age </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> s2.age</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> s1.name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">胡凯</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> s2.name </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">胡凯</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div>`,29),p=[o];function c(t,C,r,i,d,y){return n(),a("div",null,p)}const F=s(e,[["render",c]]);export{D as __pageData,F as default};
