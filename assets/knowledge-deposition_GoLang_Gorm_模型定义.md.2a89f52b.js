import{_ as e,c as s,o as a,a as o}from"./app.50869171.js";const D=JSON.parse('{"title":"模型定义","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"模型定义","slug":"模型定义-1","link":"#模型定义-1","children":[]},{"level":2,"title":"字段标签","slug":"字段标签","link":"#字段标签","children":[]}],"relativePath":"knowledge-deposition/GoLang/Gorm/模型定义.md"}'),n={name:"knowledge-deposition/GoLang/Gorm/模型定义.md"},l=o(`<h1 id="模型定义" tabindex="-1">模型定义 <a class="header-anchor" href="#模型定义" aria-hidden="true">#</a></h1><h2 id="模型定义-1" tabindex="-1">模型定义 <a class="header-anchor" href="#模型定义-1" aria-hidden="true">#</a></h2><p>模型是标准的<code>struct</code>，由<code>Go</code>的基本数据类型、实现了<a href="https://pkg.go.dev/database/sql#Scanner" target="_blank" rel="noreferrer">Scanner</a>和<a href="https://pkg.go.dev/database/sql/driver#Valuer" target="_blank" rel="noreferrer">Valuer</a>接口的自定义类型及其指针或别名组成</p><p>例如:</p><div class="language-Go"><button title="Copy Code" class="copy"></button><span class="lang">Go</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ID           </span><span style="color:#C792EA;">uint</span></span>
<span class="line"><span style="color:#A6ACCD;">  Name         </span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Email        </span><span style="color:#89DDFF;">*</span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">  Age          </span><span style="color:#C792EA;">uint8</span></span>
<span class="line"><span style="color:#A6ACCD;">  Birthday     </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  MemberNumber sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NullString</span></span>
<span class="line"><span style="color:#A6ACCD;">  ActivatedAt  sql</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NullTime</span></span>
<span class="line"><span style="color:#A6ACCD;">  CreatedAt    time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#A6ACCD;">  UpdatedAt    time</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Time</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>结构体<code>小写属性</code>是<code>不会生成字段</code>的</p></div><h2 id="字段标签" tabindex="-1">字段标签 <a class="header-anchor" href="#字段标签" aria-hidden="true">#</a></h2><ul><li><p><code>column</code>：自定义<code>列名</code></p></li><li><p><code>type</code>：<code>列数据类型</code>，例如：<code>bool</code>、<code>int</code>、<code>uint</code>、<code>float</code>、<code>string</code>、<code>time</code>、<code>bytes</code></p></li><li><p><code>size</code>：定义列数据类型的<code>大小</code>或<code>长度</code></p></li><li><p><code>primaryKey</code>：将列定义为<code>主键</code></p></li><li><p><code>unique</code>：将列定义为<code>唯一键</code></p></li><li><p><code>default</code>：定义列的<code>默认值</code></p></li><li><p><code>not null</code>：指定列为<code>NOT NULL</code>，不可为空</p></li><li><p><code>embedded</code>：嵌套字段</p></li><li><p><code>embeddedPrefix</code>：嵌入字段的<code>列名前缀</code></p></li><li><p><code>comment</code>：列的<code>注释</code></p></li></ul>`,8),c=[l];function p(t,d,r,i,A,C){return a(),s("div",null,c)}const h=e(n,[["render",p]]);export{D as __pageData,h as default};
