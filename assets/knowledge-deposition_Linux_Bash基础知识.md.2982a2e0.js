import{_ as s,c as l,o as a,e as n}from"./app.7b8aa9ff.js";const h=JSON.parse('{"title":"Bash 基础语法","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"文件格式","slug":"文件格式","link":"#文件格式","children":[]},{"level":2,"title":"运行bash脚本","slug":"运行bash脚本","link":"#运行bash脚本","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"定义变量","slug":"定义变量","link":"#定义变量","children":[]},{"level":3,"title":"使用变量","slug":"使用变量","link":"#使用变量","children":[]},{"level":3,"title":"定义只读变量","slug":"定义只读变量","link":"#定义只读变量","children":[]},{"level":3,"title":"删除变量","slug":"删除变量","link":"#删除变量","children":[]},{"level":3,"title":"变量类型","slug":"变量类型","link":"#变量类型","children":[]}]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[{"level":3,"title":"单引号字符串","slug":"单引号字符串","link":"#单引号字符串","children":[]},{"level":3,"title":"双引号字符串","slug":"双引号字符串","link":"#双引号字符串","children":[]},{"level":3,"title":"拼接字符串","slug":"拼接字符串","link":"#拼接字符串","children":[]},{"level":3,"title":"获取字符串长度","slug":"获取字符串长度","link":"#获取字符串长度","children":[]},{"level":3,"title":"提取子字符串","slug":"提取子字符串","link":"#提取子字符串","children":[]},{"level":3,"title":"查找子字符串","slug":"查找子字符串","link":"#查找子字符串","children":[]},{"level":3,"title":"提取字符串","slug":"提取字符串","link":"#提取字符串","children":[]}]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[{"level":3,"title":"定义数组","slug":"定义数组","link":"#定义数组","children":[]},{"level":3,"title":"读取数组","slug":"读取数组","link":"#读取数组","children":[]}]},{"level":2,"title":"Shell传递参数","slug":"shell传递参数","link":"#shell传递参数","children":[]},{"level":2,"title":"Shell基本运算符","slug":"shell基本运算符","link":"#shell基本运算符","children":[{"level":3,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[]},{"level":3,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":3,"title":"布尔运算符","slug":"布尔运算符","link":"#布尔运算符","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":3,"title":"字符串运算符","slug":"字符串运算符","link":"#字符串运算符","children":[]},{"level":3,"title":"文件测试运算符","slug":"文件测试运算符","link":"#文件测试运算符","children":[]}]},{"level":2,"title":"echo命令","slug":"echo命令","link":"#echo命令","children":[{"level":3,"title":"显示普通字符串","slug":"显示普通字符串","link":"#显示普通字符串","children":[]},{"level":3,"title":"显示转义字符","slug":"显示转义字符","link":"#显示转义字符","children":[]},{"level":3,"title":"显示变量","slug":"显示变量","link":"#显示变量","children":[]},{"level":3,"title":"显示换行","slug":"显示换行","link":"#显示换行","children":[]},{"level":3,"title":"显示不换行","slug":"显示不换行","link":"#显示不换行","children":[]},{"level":3,"title":"显示结果定向至文件","slug":"显示结果定向至文件","link":"#显示结果定向至文件","children":[]},{"level":3,"title":"原样输出字符串，不进行转义或取变量(用单引号)","slug":"原样输出字符串-不进行转义或取变量-用单引号","link":"#原样输出字符串-不进行转义或取变量-用单引号","children":[]},{"level":3,"title":"显示命令执行结果","slug":"显示命令执行结果","link":"#显示命令执行结果","children":[]}]},{"level":2,"title":"流程控制","slug":"流程控制","link":"#流程控制","children":[{"level":3,"title":"if else","slug":"if-else","link":"#if-else","children":[]},{"level":3,"title":"for 循环","slug":"for-循环","link":"#for-循环","children":[]},{"level":3,"title":"while 语句","slug":"while-语句","link":"#while-语句","children":[]},{"level":3,"title":"until 循环","slug":"until-循环","link":"#until-循环","children":[]},{"level":3,"title":"case ... esac","slug":"case-esac","link":"#case-esac","children":[]}]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"定义函数","slug":"定义函数","link":"#定义函数","children":[]},{"level":3,"title":"函数参数","slug":"函数参数","link":"#函数参数","children":[]}]},{"level":2,"title":"输入/输出重定向","slug":"输入-输出重定向","link":"#输入-输出重定向","children":[{"level":3,"title":"/dev/null 文件","slug":"dev-null-文件","link":"#dev-null-文件","children":[]}]}],"relativePath":"knowledge-deposition/Linux/Bash基础知识.md"}'),e={name:"knowledge-deposition/Linux/Bash基础知识.md"},t=n(`<h1 id="bash-基础语法" tabindex="-1">Bash 基础语法 <a class="header-anchor" href="#bash-基础语法" aria-hidden="true">#</a></h1><h2 id="文件格式" tabindex="-1">文件格式 <a class="header-anchor" href="#文件格式" aria-hidden="true">#</a></h2><p>文件第一行<code>#!/bin/bash</code>或者<code>#!/bin/sh</code>，<code>#!</code>告诉系统其后路径所指定的程序即是解释此脚本文件的<code>Shell程序</code>。</p><h2 id="运行bash脚本" tabindex="-1">运行<code>bash</code>脚本 <a class="header-anchor" href="#运行bash脚本" aria-hidden="true">#</a></h2><ul><li>作为可执行程序</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">chmod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">u+x</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./test.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">添加运行权限</span></span>
<span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/</span><span style="color:#82AAFF;">test</span><span style="color:#FFCB6B;">.sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">运行脚本</span></span>
<span class="line"></span></code></pre></div><ul><li>作为解释器参数</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">/bin/sh</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test.sh</span></span>
<span class="line"><span style="color:#FFCB6B;">/bin/Bash</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test.sh</span></span>
<span class="line"></span></code></pre></div><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-hidden="true">#</a></h2><h3 id="定义变量" tabindex="-1">定义变量 <a class="header-anchor" href="#定义变量" aria-hidden="true">#</a></h3><p>定义变量时，变量名<code>不加$</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">haha</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>变量名</code>和<code>等号</code>之间<code>不能有空格</code></p></div><p><strong>变量命名规则：</strong></p><ul><li>命名只能使用英文字母，数字和下划线，首个字符不能以数字开头</li><li>中间不能有空格，可以使用下划线_</li><li>不能使用标点符号</li><li>不能使用bash里的关键字（可用help命令查看保留关键字）</li></ul><p>除了显式地直接赋值，还可以用语句给变量赋值</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> file </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">ls</span><span style="color:#C3E88D;"> /etc</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#FFCB6B;">或</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> file </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">ls</span><span style="color:#C3E88D;"> /etc</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="使用变量" tabindex="-1">使用变量 <a class="header-anchor" href="#使用变量" aria-hidden="true">#</a></h3><p>使用一个定义过的变量，只要在变量名前面加<code>$</code>即可</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">your_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bash</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $your_name</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">your_name</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>变量名外面的<code>{}</code>是可选的，加不加都行，推荐给所有变量加上花括号</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hi rose</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> $name</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">当前str为 </span><span style="color:#A6ACCD;">$str</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">当前str为 </span><span style="color:#89DDFF;">\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><h3 id="定义只读变量" tabindex="-1">定义只读变量 <a class="header-anchor" href="#定义只读变量" aria-hidden="true">#</a></h3><p>使用<code>readonly</code>关键字可以将变量定义为<code>只读变量</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">myUrl</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://www.google.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C792EA;">readonly</span><span style="color:#A6ACCD;"> myUrl</span></span>
<span class="line"></span></code></pre></div><h3 id="删除变量" tabindex="-1">删除变量 <a class="header-anchor" href="#删除变量" aria-hidden="true">#</a></h3><p>使用<code>unset</code>删除变量</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#82AAFF;">unset</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">variable_name</span></span>
<span class="line"></span></code></pre></div><h3 id="变量类型" tabindex="-1">变量类型 <a class="header-anchor" href="#变量类型" aria-hidden="true">#</a></h3><ul><li><code>局部变量</code>：局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量</li><li><code>环境变量</code>：所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。</li><li><code>shell变量</code>：shell变量是由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行</li></ul><h2 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-hidden="true">#</a></h2><h3 id="单引号字符串" tabindex="-1">单引号字符串 <a class="header-anchor" href="#单引号字符串" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><ul><li>单引号里的任何字符都会原样输出，单引号字符串中的<code>变量是无效</code>的</li><li>单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用</li></ul><h3 id="双引号字符串" tabindex="-1">双引号字符串 <a class="header-anchor" href="#双引号字符串" aria-hidden="true">#</a></h3><ul><li>双引号里可以有<code>变量</code></li><li>双引号里可以出现<code>转义字符</code></li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">22</span></span>
<span class="line"><span style="color:#A6ACCD;">cur_age</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="拼接字符串" tabindex="-1">拼接字符串 <a class="header-anchor" href="#拼接字符串" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">your_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">runoob</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用双引号拼接</span></span>
<span class="line"><span style="color:#A6ACCD;">greeting</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$your_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">greeting_1</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">\${</span><span style="color:#C3E88D;">your_name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $greeting  $greeting_1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用单引号拼接</span></span>
<span class="line"><span style="color:#A6ACCD;">greeting_2</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">$your_name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">greeting_3</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello, \${your_name} !</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $greeting_2  $greeting_3</span></span>
<span class="line"></span></code></pre></div><h3 id="获取字符串长度" tabindex="-1">获取字符串长度 <a class="header-anchor" href="#获取字符串长度" aria-hidden="true">#</a></h3><ul><li>使用<code>\${#string}</code></li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">qwer</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${#</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"></span></code></pre></div><h3 id="提取子字符串" tabindex="-1">提取子字符串 <a class="header-anchor" href="#提取子字符串" aria-hidden="true">#</a></h3><p>从字符串<code>第2个字符</code>开始<code>截取6个字符</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello world</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">:</span><span style="color:#C3E88D;">6</span><span style="color:#89DDFF;">}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ello</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">w</span></span>
<span class="line"></span></code></pre></div><h3 id="查找子字符串" tabindex="-1">查找子字符串 <a class="header-anchor" href="#查找子字符串" aria-hidden="true">#</a></h3><p>查找字符<code>i</code>或<code>o</code>的位置(哪个字母先出现就计算哪个)</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">runoob is a great site</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> index.md </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$string</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> io</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 输出 4</span></span>
<span class="line"></span></code></pre></div><h3 id="提取字符串" tabindex="-1">提取字符串 <a class="header-anchor" href="#提取字符串" aria-hidden="true">#</a></h3><h4 id="使用符号" tabindex="-1">使用符号 <a class="header-anchor" href="#使用符号" aria-hidden="true">#</a></h4><ul><li><code>#</code>：表示从左边算起第一个</li><li><code>%</code>：表示从右边算起第一个</li><li><code>##</code>：表示从左边算起最后一个</li><li><code>%%</code>：表示从右边算起最后一个</li></ul><h4 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-hidden="true">#</a></h4><ul><li>使用<code>\${var##*symbol}</code></li></ul><p><code>从左向右</code>开始，提取字符串中<code>最后一个symbol</code>符号<code>右边</code>的字符串，<code>不包含symbol符号本身</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/Bash</span></span>
<span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/a1/b1/c1/foo.png</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出foo.png</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">##*/}&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出png</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">##*</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">}&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>使用<code>\${var#*symbol}</code></li></ul><p><code>从左向右</code>开始，提取字符串中<code>第一个symbol</code>符号<code>右边</code>的字符串，<code>不包含symbol符号本身</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/a1/b1/c1/foo.png</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出 a1/b1/c1/foo.png</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">#*/}</span></span>
<span class="line"><span style="color:#C3E88D;"># 输出 /b1/c1/foo.png</span></span>
<span class="line"><span style="color:#C3E88D;">echo </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">#*</span><span style="color:#A6ACCD;">1</span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C3E88D;"># 输出 png</span></span>
<span class="line"><span style="color:#C3E88D;">echo </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">#*</span><span style="color:#A6ACCD;">.</span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>使用<code>\${var%%symbol*}</code></li></ul><p><code>从右向左</code>开始，提取字符串中<code>最后一个symbol</code>符号<code>到字符串开头</code>的字符，<code>不包含symbol符号本身</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/a1/b1/c1/foo.png</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出/a1/b1/c1/foo</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">%%</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*}&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出 /a</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">%%</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">*}&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>使用<code>\${var%symbol*}</code></li></ul><p><code>从右向左</code>开始，提取字符串中<code>第一个symbol符号</code>到<code>字符串开头</code>的字符，<code>不包含symbol符号本身</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/a1/b1/c1/foo.png</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出 /a1/b1/c1/foo</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">%</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*}&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出 /a1/b1/c1</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">%/*}&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 输出 /a1/b1/c1/fo</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">%</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">*}&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-hidden="true">#</a></h2><p><code>bash</code>支持<code>一维数组（不支持多维数组）</code>，并且没有限定数组的大小</p><h3 id="定义数组" tabindex="-1">定义数组 <a class="header-anchor" href="#定义数组" aria-hidden="true">#</a></h3><p><code>Shell</code>中，用<code>()</code>来表示数组，数组元素用<code>空格</code>符号分割开</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">(</span><span style="color:#C3E88D;">值1</span><span style="color:#A6ACCD;"> 值2 ... 值n)</span></span>
<span class="line"></span></code></pre></div><h3 id="读取数组" tabindex="-1">读取数组 <a class="header-anchor" href="#读取数组" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">数组名</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">下标</span><span style="color:#89DDFF;">]}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">]}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"></span></code></pre></div><h4 id="获取数组中的所有元素" tabindex="-1">获取数组中的所有元素 <a class="header-anchor" href="#获取数组中的所有元素" aria-hidden="true">#</a></h4><ul><li>使用<code>@</code>或者<code>*</code>可以获取数组中的所有元素</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">]}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">]}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span></span>
<span class="line"></span></code></pre></div><h4 id="获取数组的长度" tabindex="-1">获取数组的长度 <a class="header-anchor" href="#获取数组的长度" aria-hidden="true">#</a></h4><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数组的长度为</span><span style="color:#89DDFF;">\${#</span><span style="color:#C3E88D;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">@</span><span style="color:#89DDFF;">]}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">数组的长度为6</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">数组的长度为</span><span style="color:#89DDFF;">\${#</span><span style="color:#C3E88D;">arr</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">]}&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">数组的长度为6</span></span>
<span class="line"></span></code></pre></div><h2 id="shell传递参数" tabindex="-1"><code>Shell</code>传递参数 <a class="header-anchor" href="#shell传递参数" aria-hidden="true">#</a></h2><p>脚本内获取参数的格式为：<code>$n</code>，n代表一个数字，</p><ul><li>1 为执行脚本的第一个参数</li><li>2 为执行脚本的第二个参数</li><li>以此类推……</li></ul><h2 id="shell基本运算符" tabindex="-1"><code>Shell</code>基本运算符 <a class="header-anchor" href="#shell基本运算符" aria-hidden="true">#</a></h2><p>支持多种运算符</p><ul><li>算数运算符</li><li>关系运算符</li><li>布尔运算符</li><li>字符串运算符</li><li>文件测试运算符</li></ul><p>原生<code>bash</code>不支持简单的数学运算，但是可以通过其他命令来实现，例如<code>awk</code>和<code>expr</code>，<code>expr</code>最常用</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">expr</span><span style="color:#C3E88D;"> </span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;"> + </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">两数之和为: </span><span style="color:#A6ACCD;">$val</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">两数之和为:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"></span></code></pre></div><p><code>表达式</code>和<code>运算符</code>之间要有<code>空格</code>，例如<code>2+2</code>是不对的，必须写成<code>2 + 2</code>，完整的表达式要被<code>反引号(\`\`)</code>包裹</p><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">20</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:center;">加法</td><td style="text-align:center;"><code>echo expr \${a} + \${b}</code>，结果为30</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">减法</td><td style="text-align:center;"><code>echo expr \${a} - \${b}</code>，结果为-10</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">减法</td><td style="text-align:center;"><code>echo expr \${a} \\* \${b}</code>，结果为200</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:center;">除法</td><td style="text-align:center;"><code>echo expr \${a} / \${b}</code>，结果为0.5</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:center;">取余</td><td style="text-align:center;"><code>echo expr \${a} % \${b}</code>，结果为10</td></tr><tr><td style="text-align:center;">=</td><td style="text-align:center;">赋值</td><td style="text-align:center;"><code>a=\${b}</code>，a为10</td></tr><tr><td style="text-align:center;">==</td><td style="text-align:center;">用于比较两个数字是否相等</td><td style="text-align:center;"><code>[ $a == $b ]</code>，返回 false</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">用于比较两个数字是否不相等</td><td style="text-align:center;"><code>[ $a != $b ]</code>，返回 true</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><p>条件表达式要放在方括号之间，并且要有空格，例如: <code>[$a==$b]</code>是错误的，必须写成<code>[ $a == $b ]</code>才行</p></li><li><p><code>乘号(*)</code>前边必须加<code>反斜杠(\\)</code>才能实现乘法运算</p></li></ul></div><h3 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">-eq</td><td style="text-align:center;">检测两个数是否相等，相等返回 true</td><td style="text-align:center;"><code>[ $a -eq $b ]</code> 返回 false</td></tr><tr><td style="text-align:center;">-ne</td><td style="text-align:center;">检测两个数是否不相等，不相等返回 true</td><td style="text-align:center;"><code>[ $a -ne $b ]</code> 返回 true</td></tr><tr><td style="text-align:center;">-gt</td><td style="text-align:center;">检测左边的数是否大于右边的，如果是，则返回 true</td><td style="text-align:center;"><code>[ $a -gt $b ]</code> 返回 false</td></tr><tr><td style="text-align:center;">-lt</td><td style="text-align:center;">检测左边的数是否小于右边的，如果是，则返回 true</td><td style="text-align:center;"><code>[ $a -lt $b ]</code> 返回 true</td></tr><tr><td style="text-align:center;">-ge</td><td style="text-align:center;">检测左边的数是否大于等于右边的，如果是，则返回 true</td><td style="text-align:center;"><code>[ $a -ge $b ]</code> 返回 false</td></tr><tr><td style="text-align:center;">-le</td><td style="text-align:center;">检测左边的数是否小于等于右边的，如果是，则返回 true</td><td style="text-align:center;"><code>[ $a -le $b ]</code> 返回 true</td></tr></tbody></table><h3 id="布尔运算符" tabindex="-1">布尔运算符 <a class="header-anchor" href="#布尔运算符" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">!</td><td style="text-align:center;">非运算，表达式为 true 则返回 false，否则返回 true</td><td style="text-align:center;"><code>[ ! false ]</code> 返回true</td></tr><tr><td style="text-align:center;">-o</td><td style="text-align:center;">或运算，有一个表达式为 true 则返回 true</td><td style="text-align:center;"><code>[ $a -lt 20 -o $b -gt 100 ]</code> 返回true</td></tr><tr><td style="text-align:center;">-a</td><td style="text-align:center;">与运算，两个表达式都为 true 才返回 true</td><td style="text-align:center;"><code>[ $a -lt 20 -a $b -gt 100 ]</code> 返回false</td></tr></tbody></table><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>注意改表达式需要被两个<code>[]</code>包裹</strong></p></div><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">&amp;&amp;</td><td style="text-align:center;">逻辑的<code>AND</code></td><td style="text-align:center;"><code>[[ $a -lt 100 &amp;&amp; $b -gt 100 ]]</code> 返回false</td></tr><tr><td style="text-align:center;">||</td><td style="text-align:center;">逻辑的<code>OR</code></td><td style="text-align:center;"><code>[[ $a -lt 100 || $b -gt 100 ]]</code> 返回true</td></tr></tbody></table><h3 id="字符串运算符" tabindex="-1">字符串运算符 <a class="header-anchor" href="#字符串运算符" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;">检测两个字符串是否相等，相等返回 true</td><td style="text-align:center;"><code>[ $a = $b ]</code> 返回 false</td></tr><tr><td style="text-align:center;">!=</td><td style="text-align:center;">检测两个字符串是否不相等，不相等返回 true</td><td style="text-align:center;"><code>[ $a != $b ]</code> 返回 true</td></tr><tr><td style="text-align:center;">-z</td><td style="text-align:center;">检测字符串长度是否为0，为0返回 true</td><td style="text-align:center;"><code>[ -z $a ]</code> 返回 false</td></tr><tr><td style="text-align:center;">-n</td><td style="text-align:center;">检测字符串长度是否不为0，不为 0 返回true</td><td style="text-align:center;"><code>[ -n $a ]</code> 返回 true</td></tr><tr><td style="text-align:center;">$</td><td style="text-align:center;">检测字符串是否为空，不为空返回 true</td><td style="text-align:center;"><code>[ $a ]</code> 返回 true</td></tr></tbody></table><h3 id="文件测试运算符" tabindex="-1">文件测试运算符 <a class="header-anchor" href="#文件测试运算符" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">说明</th><th style="text-align:center;">举例</th></tr></thead><tbody><tr><td style="text-align:center;">-b file</td><td style="text-align:center;">检测文件是否是块设备文件，如果是，则返回true</td><td style="text-align:center;"><code>[ -b $file ]</code> 返回true/false</td></tr><tr><td style="text-align:center;">-c file</td><td style="text-align:center;">检测文件是否是字符设备文件 ，如果是，则返回true</td><td style="text-align:center;"><code>[ -c $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-d file</td><td style="text-align:center;">检测文件是否是目录 ，如果是，则返回 true</td><td style="text-align:center;"><code>[ -d $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-f file</td><td style="text-align:center;">检测文件是否是普通文件（既不是目录，也不是设备文件，如果是，则返回 true</td><td style="text-align:center;"><code>[ -f $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-g file</td><td style="text-align:center;">检测文件是否设置了SGID位 ，如果是，则返回true</td><td style="text-align:center;"><code>[ -g $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-k file</td><td style="text-align:center;">检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true</td><td style="text-align:center;"><code>[ -k $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-p file</td><td style="text-align:center;">检测文件是否是有名管道 ，如果是，则返回 true</td><td style="text-align:center;"><code>[ -p $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-u file</td><td style="text-align:center;">检测文件是否设置了SUID位 ，如果是，则返回 true</td><td style="text-align:center;"><code>[ -u $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-r file</td><td style="text-align:center;">检测文件是否可读 ，如果是，则返回true</td><td style="text-align:center;"><code>[ -r $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-w file</td><td style="text-align:center;">检测文件是否可写 ，如果是，则返回true</td><td style="text-align:center;"><code>[ -w $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-x file</td><td style="text-align:center;">检测文件是否可执行 ，如果是，则返回true</td><td style="text-align:center;"><code>[ -x $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-s file</td><td style="text-align:center;">检测文件是否为空（文件大小是否大于0），不为空返回true</td><td style="text-align:center;"><code>[ -s $file ]</code>返回true/false</td></tr><tr><td style="text-align:center;">-e file</td><td style="text-align:center;">检测文件（包括目录）是否存在 ，如果是，则返回true</td><td style="text-align:center;"><code>[ -e $file ]</code>返回true/false</td></tr></tbody></table><h2 id="echo命令" tabindex="-1">echo命令 <a class="header-anchor" href="#echo命令" aria-hidden="true">#</a></h2><h3 id="显示普通字符串" tabindex="-1">显示普通字符串 <a class="header-anchor" href="#显示普通字符串" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">str</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="显示转义字符" tabindex="-1">显示转义字符 <a class="header-anchor" href="#显示转义字符" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">It is a test</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="显示变量" tabindex="-1">显示变量 <a class="header-anchor" href="#显示变量" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sdfsd</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;\${</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> as</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># sdfsd as</span></span>
<span class="line"></span></code></pre></div><h3 id="显示换行" tabindex="-1">显示换行 <a class="header-anchor" href="#显示换行" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1 \\n2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># -e 开启转义</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2</span></span>
<span class="line"></span></code></pre></div><h3 id="显示不换行" tabindex="-1">显示不换行 <a class="header-anchor" href="#显示不换行" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OK! \\c</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># -e 开启转义 \\c 不换行</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is a test</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="显示结果定向至文件" tabindex="-1">显示结果定向至文件 <a class="header-anchor" href="#显示结果定向至文件" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">It is a test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">myfile</span></span>
<span class="line"></span></code></pre></div><h3 id="原样输出字符串-不进行转义或取变量-用单引号" tabindex="-1">原样输出字符串，不进行转义或取变量(<code>用单引号</code>) <a class="header-anchor" href="#原样输出字符串-不进行转义或取变量-用单引号" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$name\\&quot;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># $name\\&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="显示命令执行结果" tabindex="-1">显示命令执行结果 <a class="header-anchor" href="#显示命令执行结果" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这里使用的是反引号(\`), 而不是单引号 (<code>&#39;</code>)</p></div><p>结果将显示当前日期</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#FFCB6B;">date</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span></code></pre></div><h2 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-hidden="true">#</a></h2><h3 id="if-else" tabindex="-1">if else <a class="header-anchor" href="#if-else" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> condition</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command1</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commandN</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> condition</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command1</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commandN</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">command</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> condition1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">elif</span><span style="color:#A6ACCD;"> condition2 </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">then</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commandN</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span></code></pre></div><h3 id="for-循环" tabindex="-1">for 循环 <a class="header-anchor" href="#for-循环" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> var </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> item1 item2 ... itemN</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commandN</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><h3 id="while-语句" tabindex="-1">while 语句 <a class="header-anchor" href="#while-语句" aria-hidden="true">#</a></h3><p>while 循环用于<code>不断执行一系列命令</code>，也用于从输入文件中读取数据</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> condition</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">command</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><h3 id="until-循环" tabindex="-1">until 循环 <a class="header-anchor" href="#until-循环" aria-hidden="true">#</a></h3><p>util循环执行一系列命令直至条件为<code>true</code>时停止。 until循环与while循环在处理方式上刚好相反。 一般<code>while</code>循环优于<code>until</code>循环，但在某些时候—也只是极少数情况下，until循环更加有用。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">until</span><span style="color:#A6ACCD;"> condition</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">command</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span></code></pre></div><h3 id="case-esac" tabindex="-1">case ... esac <a class="header-anchor" href="#case-esac" aria-hidden="true">#</a></h3><p>类似<code>switch case</code></p><ul><li>bash中的每个<code>case</code>语句均以<code>case</code>关键字开头，后接<code>case表达式</code>和<code>in</code>关键字。 使用<code>esac</code>关键字<code>关闭case语句</code>;</li><li>可以应用以<code>|</code>分隔的多个模式运算符，运算符指示模式列表的终止。包含语句的模式称为子句，并且必须以双分号(<code>;;</code>)终止;</li><li>星号(<code>*</code>)用作定义默认情况的最终模式。当用作最后一种情况时，它用作默认情况;</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> variable </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#A6ACCD;">  pattern_1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commandN</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#A6ACCD;">  pattern_2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">command2</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commandN</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">;;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">esac</span></span>
<span class="line"></span></code></pre></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#A6ACCD;"> $Paltform </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    iPhone</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">iPad</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">is IOA</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">;;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    Android</span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">android</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">is Android</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">;;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">默认情况</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">;;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">esac</span></span>
<span class="line"></span></code></pre></div><h2 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-hidden="true">#</a></h2><h3 id="定义函数" tabindex="-1">定义函数 <a class="header-anchor" href="#定义函数" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> function </span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> funname </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">action</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">return int</span><span style="color:#89DDFF;">;]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>有两种格式定义</p><ul><li>以函数名称开头，后跟括号</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">function_name</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">action</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>以函数保留字开头，后跟函数名称</li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">function_name()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">commands</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>函数返回值：可以显示加：<code>return</code>返回，如果不加，将以最后一条命令运行结果，作为返回值，return后跟数值<code>n(0-255)</code></li></ul><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">demoFun</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">这是我的第一个 shell 函数!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-----函数开始执行-----</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">demoFun</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-----函数执行完毕-----</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#-----函数开始执行-----</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#这是我的第一个 shell 函数!</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#-----函数执行完毕-----</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">demoFoo(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">这是我的第一个 shell 函数!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-----函数开始执行-----</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">demoFoo</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-----函数执行完毕-----</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#-----函数开始执行-----</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#这是我的第一个 shell 函数!</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#-----函数执行完毕-----</span></span>
<span class="line"></span></code></pre></div><h3 id="函数参数" tabindex="-1">函数参数 <a class="header-anchor" href="#函数参数" aria-hidden="true">#</a></h3><p>调用函数时可以向其传递参数。在函数体内部，通过<code>$n</code>的形式来获取参数的值，例如，<code>$1</code>表示<code>第一个</code>参数，<code>$2</code>表示<code>第二个</code>参数...</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">funWithParam</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一个参数为 </span><span style="color:#A6ACCD;font-style:italic;">$1</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第二个参数为 </span><span style="color:#A6ACCD;font-style:italic;">$2</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第十个参数为 </span><span style="color:#A6ACCD;">$10</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第十个参数为 </span><span style="color:#A6ACCD;font-style:italic;">\${10}</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第十一个参数为 </span><span style="color:#A6ACCD;font-style:italic;">\${11}</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">参数总数有 </span><span style="color:#A6ACCD;">$#</span><span style="color:#C3E88D;"> 个!</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">作为一个字符串输出所有参数 </span><span style="color:#A6ACCD;">$*</span><span style="color:#C3E88D;"> !</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#FFCB6B;">funWithParam</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">34</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">73</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#第一个参数为 1 !</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#第二个参数为 2 !</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#第十个参数为 10 !</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#第十个参数为 34 !</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#第十一个参数为 73 !</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#参数总数有 11 个!</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#作为一个字符串输出所有参数 1 2 3 4 5 6 7 8 9 34 73 !</span></span>
<span class="line"></span></code></pre></div><h2 id="输入-输出重定向" tabindex="-1">输入/输出重定向 <a class="header-anchor" href="#输入-输出重定向" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">设备</th><th style="text-align:center;">设备文件名</th><th style="text-align:center;">文件描述符</th><th style="text-align:center;">类型</th></tr></thead><tbody><tr><td style="text-align:center;">键盘</td><td style="text-align:center;"><code>/dev/stdin</code></td><td style="text-align:center;">0</td><td style="text-align:center;">标准输入</td></tr><tr><td style="text-align:center;">显示器</td><td style="text-align:center;"><code>/dev/stdout</code></td><td style="text-align:center;">1</td><td style="text-align:center;">标准输出</td></tr><tr><td style="text-align:center;">显示器</td><td style="text-align:center;"><code>/dev/stderr</code></td><td style="text-align:center;">2</td><td style="text-align:center;">标准错误输出</td></tr></tbody></table><p>以下是一些常用的命令示意：</p><table><thead><tr><th style="text-align:center;">命令</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">command &gt; file</td><td style="text-align:center;">将<code>输出</code>重定向到file</td></tr><tr><td style="text-align:center;">command &lt; file</td><td style="text-align:center;">将<code>输入</code>重定向到file</td></tr><tr><td style="text-align:center;">command &gt;&gt; file</td><td style="text-align:center;">将<code>输出</code>以<code>追加</code>的方式重定向到file</td></tr><tr><td style="text-align:center;">n &gt; file</td><td style="text-align:center;">将<code>文件描述符</code>为<code>n</code>的文件重定向到 file</td></tr><tr><td style="text-align:center;">n &gt;&gt; file</td><td style="text-align:center;"><code>将文件描述符</code>为<code>n</code>的文件以<code>追加</code>的方式重定向到 file</td></tr><tr><td style="text-align:center;">n &gt;&amp; m</td><td style="text-align:center;">将输出文件<code>m</code>和<code>n</code>合并</td></tr><tr><td style="text-align:center;">n &lt;&amp; m</td><td style="text-align:center;">将输入文件<code>m</code>和<code>n</code>合并</td></tr><tr><td style="text-align:center;">&lt;&lt; tag</td><td style="text-align:center;">将开始标记<code>tag</code>和结束标记<code>tag</code>之间的内容作为输入</td></tr></tbody></table><h3 id="dev-null-文件" tabindex="-1"><code>/dev/null</code> 文件 <a class="header-anchor" href="#dev-null-文件" aria-hidden="true">#</a></h3><p>如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到<code>/dev/null</code></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">command</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/dev/null</span></span>
<span class="line"></span></code></pre></div><ul><li><code>/dev/null</code>是一个特殊的文件，写入到它的内容都会被丢弃，通常也被成为<code>位桶（bit bucket）</code>或<code>黑洞</code>;</li><li>如果尝试从该文件读取内容，那么什么也读不到，但是<code>/dev/null</code>文件非常有用，将命令的输出重定向到它，会起到<code>禁止输出</code>的效果。</li></ul><p>如果希望屏蔽<code>stdout</code>和<code>stderr</code>，可以这样写，表示<code>命令的输出</code>和<code>错误的输出</code>都重定向到<code>/dev/null</code>中</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">command</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/dev/null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">2&gt;&amp;1</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这里的<code>2</code>和<code>&gt;</code>之间不可以有空格，<code>2&gt;</code>是一体的时候才表示错误输出。</p></div>`,161),o=[t];function p(c,r,i,d,y,D){return a(),l("div",null,o)}const F=s(e,[["render",p]]);export{h as __pageData,F as default};
